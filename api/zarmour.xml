<class name = "zarmour">
    zarmour - armoured text encoding and decoding

    <include filename = "license.xml" />

    <enum name = "mode">
        <constant name = "base64 std" value = "0" />
        <constant name = "base64 url" value = "1" />
        <constant name = "base32 std" value = "2" />
        <constant name = "base32 hex" value = "3" />
        <constant name = "base16 hex" value = "4" />
        <constant name = "z85"        value = "5" />
    </enum>

    <constructor>
        Create a new zarmour.
    </constructor>

    <destructor>
        Destroy the zarmour.
    </destructor>

    <method name = "print" exclude = "1" />

    <method name = "mode str">
        Get printable string for mode.
        <return type = "string" />
    </method>

    <method name = "encode">
        Encode a stream of bytes into an armoured string.
        <argument name = "data" type = "buffer" />
        <argument name = "data size" type = "size" />
        <return type = "string" />
    </method>

    <method name = "decode">
        Decode an armoured string into a string of bytes.
        The decoded output is null-terminated, so it may be treated
        as a string, if that's what it was prior to encoding.
        <argument name = "data" type = "string" />
        <argument name = "data size" type = "size" by_reference = "1" />
        <return type = "buffer" fresh = "1" />
    </method>

    <method name = "mode">
        Get the mode property.
        <return type = "enum:zarmour.mode" />
    </method>

    <method name = "set mode">
        Set the mode property.
        <argument name = "mode" type = "enum:zarmour.mode" />
    </method>

    <method name = "pad">
        Return true if padding is turned on.
        <return type = "boolean" />
    </method>

    <method name = "set pad">
        Turn padding on or off. Default is on.
        <argument name = "pad" type = "boolean" />
    </method>

    <method name = "pad char">
        Get the padding character.
        <return type = "char" />
    </method>

    <method name = "set pad char">
        Set the padding character.
        <argument name = "pad char" type = "char" />
    </method>

    <method name = "line breaks">
        Return if splitting output into lines is turned on. Default is off.
        <return type = "boolean" />
    </method>

    <method name = "set line breaks">
        Turn splitting output into lines on or off.
        <argument name = "line breaks" type = "boolean" />
    </method>

    <method name = "line length">
        Get the line length used for splitting lines.
        <return type = "size" />
    </method>

    <method name = "set line length">
        Set the line length used for splitting lines.
        <argument name = "line length" type = "size" />
    </method>

    <method name = "test" singleton = "1">
        Self test of this class
        <argument name = "verbose" type = "boolean" />
        <return type = "integer" />
    </method>
</class>
