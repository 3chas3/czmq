.#  This is a code generator built using the iMatix GSL code generation
.#  language. See https://github.com/imatix/gsl for details. This script 
.#  is licensed under MIT/X11.
.#
.#  vim: ts=4 sw=4 et
.output "../api/zsock_option.xml"
<?xml?>
<!--
     =========================================================================
     zsock_option.xml - API definition for the zsock_option class

            ****************************************************
            *   GENERATED SOURCE CODE, DO NOT EDIT!!           *
            *   TO CHANGE THIS, EDIT api/zsock_option.gsl      *
            *   AND RUN `gen sockopts` in src/.                *
            ****************************************************

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of CZMQ, the high-level C binding for 0MQ:
    http://czmq.zeromq.org.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
    =========================================================================
-->
<class name = "zsock_option">
    <include filename = "../license.xml" />
.for version where version.major = "4" # ZMQ version 4
    <version major = "$(.major)" />
    <constructor exclude = "1" />
    <destructor exclude = "1" />
    <method name = "print" exclude = "1" />
.  for option
.    option.api_name = string.replace(option.name, "_| ")
.    if option.type = "int"
.      option.api_type = "integer"
.    endif
.    option.api_type ?= option.type
.    if regexp.match("r", option.mode)

    <method name = "$(option.api_name:)">
        <return type="$(option.api_type:)" />
    </method>
.    endif
.    if regexp.match("w", option.mode)

    <method name = "set $(option.api_name:)">
        <argument name = "$(option.api_name:)" type="$(option.api_type:)" />
    </method>
.    endif
.  endfor
.endfor
</class>
