zmonitor(3)
===========

NAME
----
zmonitor - socket event monitor

SYNOPSIS
--------
----
//  Create a new socket monitor
CZMQ_EXPORT zmonitor_t *
    zmonitor_new (zctx_t *ctx, void *socket, int events);

//  Destroy a beacon
CZMQ_EXPORT void
    zmonitor_destroy (zmonitor_t **self_p);

// Get zmonitor pipe socket, for polling or receiving messages
CZMQ_EXPORT void *
zmonitor_socket (zmonitor_t *self);

CZMQ_EXPORT void
    zmonitor_set_verbose (zmonitor_t *self, bool verbose);

// Self test of this class
CZMQ_EXPORT void
    zmonitor_test (bool verbose);

----

DESCRIPTION
-----------

The zmonitor class provides an API for obtaining socket events such as
connected, listen, disconnected, etc. Socket events are only available
for ipc and tcp socket types.


EXAMPLE
-------
.From zmonitor_test method
----
    zctx_t *ctx = zctx_new ();

    void *sink = zsocket_new (ctx, ZMQ_PULL);
    zmonitor_t *sinkmon = zmonitor_new (ctx,
        sink, ZMQ_EVENT_LISTENING | ZMQ_EVENT_ACCEPTED);
    zmonitor_set_verbose (sinkmon, verbose);
    void *sinkmon_sock = zmonitor_socket (sinkmon);

    // check sink is now listening
    zsocket_bind (sink, "tcp://*:5555");
    result = s_check_event (sinkmon_sock, ZMQ_EVENT_LISTENING);
    assert (result);

    void *source = zsocket_new (ctx, ZMQ_PUSH);
    zmonitor_t *sourcemon = zmonitor_new (ctx,
        source, ZMQ_EVENT_CONNECTED | ZMQ_EVENT_DISCONNECTED);
    zmonitor_set_verbose (sourcemon, verbose);
    void *sourcemon_sock = zmonitor_socket (sourcemon);
    zsocket_connect (source, "tcp://localhost:5555");

    // check source connected to sink
    result = s_check_event (sourcemon_sock, ZMQ_EVENT_CONNECTED);
    assert (result);

    // check sink accepted connection
    result = s_check_event (sinkmon_sock, ZMQ_EVENT_ACCEPTED);
    assert (result);

    // destroy sink to trigger a disconnect event on the source
    zsocket_destroy (ctx, sink);
    result = s_check_event (sourcemon_sock, ZMQ_EVENT_DISCONNECTED);
    assert (result);

    zmonitor_destroy (&sinkmon);
    zmonitor_destroy (&sourcemon);
    zctx_destroy (&ctx);
----

SEE ALSO
--------
linkczmq:czmq[7]
