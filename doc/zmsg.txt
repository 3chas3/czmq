zmsg(7)
=========

NAME
----
zmsg - working with multipart messages

SYNOPSIS
--------
----
zmsg_t *
    zmsg_new (void);
void
    zmsg_destroy (zmsg_t **self_p);
zmsg_t *
    zmsg_recv (void *socket);
void
    zmsg_send (zmsg_t **self_p, void *socket);
size_t
    zmsg_size (zmsg_t *self);
void
    zmsg_push (zmsg_t *self, zframe_t *frame);
void
    zmsg_append (zmsg_t *self, zframe_t *frame);
void
    zmsg_pushmem (zmsg_t *self, const void *src, size_t size);
void
    zmsg_appendmem (zmsg_t *self, const void *src, size_t size);
zframe_t *
    zmsg_pop (zmsg_t *self);
void
    zmsg_remove (zmsg_t *self, zframe_t *frame);
zframe_t *
    zmsg_first (zmsg_t *self);
zframe_t *
    zmsg_next (zmsg_t *self);
zframe_t *
    zmsg_body (zmsg_t *self);
void
    zmsg_save (zmsg_t *self, FILE *file);
zmsg_t *
    zmsg_load (FILE *file);
void
    zmsg_dump (zmsg_t *self);
int
    zmsg_test (Bool verbose);
----

DESCRIPTION
-----------

The zmsg class provides methods to send and receive multipart messages 
across 0MQ sockets. This class provides a list-like container interface, 
with methods to work with the overall container. zmsg_t messages are 
composed of zero or more zframe_t frames.


EXAMPLE
-------
.From zmsg_test method
----
----

SEE ALSO
--------
linkzapi:zapi[7]
