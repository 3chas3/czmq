zhash(7)
=========

NAME
----
zhash - hash table

SYNOPSIS
--------
----
//  Callback function for zhash_foreach method
typedef int (zhash_foreach_fn) (char *key, void *value, void *argument);
//  Callback function for zhash_freefn method
typedef void (zhash_free_fn) (void *data);

//  Opaque class structure
typedef struct _zhash zhash_t;

zhash_t *
    zhash_new (void);
void
    zhash_destroy (zhash_t **self_p);
int
    zhash_insert (zhash_t *self, char *key, void *value);
void
    zhash_update (zhash_t *self, char *key, void *value);
void
    zhash_delete (zhash_t *self, char *key);
void *
    zhash_lookup (zhash_t *self, char *key);
void *
    zhash_freefn (zhash_t *self, char *key, zhash_free_fn *free_fn);
size_t
    zhash_size (zhash_t *self);
int
    zhash_foreach (zhash_t *self, zhash_foreach_fn *callback, void *argument);
void
    zhash_test (int verbose);
----

DESCRIPTION
-----------

Expandable hash table container

Note that it's relatively slow (~50k insertions/deletes per second), so
don't do inserts/updates on the critical path for message I/O.  It can
do ~2.5M lookups per second for 16-char keys.  Timed on a 1.6GHz CPU.

EXAMPLE
-------
.From zhash_test method
----
----

SEE ALSO
--------
linkzapi:zapi[7]
